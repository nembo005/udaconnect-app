Follow the following steps 

> Install helm 

> Include the helm repo from bitnami
$ helm repo add bitnami https://charts.bitnami.com/bitnami

> Run helm udaconnect-kafka
$ helm install udaconnect-kafka bitnami/kafka

##############
### OUTPUT ###
##############

NAME: udaconnect-kafka
LAST DEPLOYED: Sat Aug 19 12:43:10 2023
NAMESPACE: default
STATUS: deployed
REVISION: 1
TEST SUITE: None
NOTES:
CHART NAME: kafka
CHART VERSION: 24.0.10
APP VERSION: 3.5.1

** Please be patient while the chart is being deployed **

Kafka can be accessed by consumers via port 9092 on the following DNS name from within your cluster:

    udaconnect-kafka.default.svc.cluster.local

Each Kafka broker can be accessed by producers via port 9092 on the following DNS name(s) from within your cluster:

    udaconnect-kafka-controller-0.udaconnect-kafka-controller-headless.default.svc.cluster.local:9092
    udaconnect-kafka-controller-1.udaconnect-kafka-controller-headless.default.svc.cluster.local:9092
    udaconnect-kafka-controller-2.udaconnect-kafka-controller-headless.default.svc.cluster.local:9092

The CLIENT listener for Kafka client connections from within your cluster have been configured with the following security settings:
    - SASL authentication

To connect a client to your Kafka, you need to create the 'client.properties' configuration files with the content below:

security.protocol=SASL_PLAINTEXT
sasl.mechanism=SCRAM-SHA-256
sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required \
    username="user1" \
    password="$(kubectl get secret udaconnect-kafka-user-passwords --namespace default -o jsonpath='{.data.client-passwords}' | base64 -d | cut -d , -f 1)";

To create a pod that you can use as a Kafka client run the following commands:

    kubectl run udaconnect-kafka-client --restart='Never' --image docker.io/bitnami/kafka:3.5.1-debian-11-r16 --namespace default --command -- sleep infinity
    kubectl cp --namespace default /path/to/client.properties udaconnect-kafka-client:/tmp/client.properties
    kubectl exec --tty -i udaconnect-kafka-client --namespace default -- bash

    PRODUCER:
        kafka-console-producer.sh \
            --producer.config /tmp/client.properties \
            --broker-list udaconnect-kafka-controller-0.udaconnect-kafka-controller-headless.default.svc.cluster.local:9092,udaconnect-kafka-controller-1.udaconnect-kafka-controller-headless.default.svc.cluster.local:9092,udaconnect-kafka-controller-2.udaconnect-kafka-controller-headless.default.svc.cluster.local:9092 \
            --topic test

    CONSUMER:
        kafka-console-consumer.sh \
            --consumer.config /tmp/client.properties \
            --bootstrap-server udaconnect-kafka.default.svc.cluster.local:9092 \
            --topic test \
            --from-beginning